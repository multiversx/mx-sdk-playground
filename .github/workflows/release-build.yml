env:
  IMAGE_NAME: development-playground
  REGISTRY_HOSTNAME: multiversx

name: Build & push Docker image (Release)

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Simulate release version (e.g., v0.4.2)'
        required: false
        default: ''
        type: string

jobs:
  build:
    strategy:
      matrix:
        arch:
          - { runner: ubuntu-latest, platform: linux/amd64, platform_tag: linux_amd64 }
          - { runner: ubuntu-24.04-arm, platform: linux/arm64, platform_tag: linux_arm64 }
    runs-on: ${{ matrix.arch.runner }}

    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log into Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_HOSTNAME }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest
            ${{ (github.event_name == 'release' && format('type=ref,event=tag')) || (github.event.inputs.version != '' && format('type=raw,value={0}', github.event.inputs.version)) || '' }}

      - name: Build and push per-arch image
        id: build
        uses: docker/build-push-action@v6
        with:
          context: ./.devcontainer
          file: ./.devcontainer/Dockerfile
          push: true
          tags: ${{ env.REGISTRY_HOSTNAME }}/${{ env.IMAGE_NAME }}:temp-${{ matrix.arch.platform_tag }}-${{ github.run_id }}
          labels: ${{ steps.meta.outputs.labels }}

  manifest:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log into Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_HOSTNAME }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest
            ${{ (github.event_name == 'release' && format('type=ref,event=tag')) || (github.event.inputs.version != '' && format('type=raw,value={0}', github.event.inputs.version)) || '' }}

      - name: Create and push manifests
        run: |
          amd64_tag="${{ env.REGISTRY_HOSTNAME }}/${{ env.IMAGE_NAME }}:temp-linux_amd64-${{ github.run_id }}"
          arm64_tag="${{ env.REGISTRY_HOSTNAME }}/${{ env.IMAGE_NAME }}:temp-linux_arm64-${{ github.run_id }}"
          
          echo '${{ steps.meta.outputs.json }}' | jq -cr '.tags[]' | while read -r tag; do
            docker buildx imagetools create -t "$tag" "$amd64_tag" "$arm64_tag"
          done

      - name: Cleanup temp tags
        if: always()
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
          REGISTRY_HOSTNAME: ${{ env.REGISTRY_HOSTNAME }}
          IMAGE_NAME: ${{ env.IMAGE_NAME }}
        run: |
          JWT=$(curl -s -H "Content-Type: application/json" -X POST -d "{\"username\":\"$DOCKERHUB_USERNAME\",\"password\":\"$DOCKERHUB_TOKEN\"}" https://hub.docker.com/v2/users/login/ | jq -r .token)
          
          REPO="$REGISTRY_HOSTNAME/$IMAGE_NAME"
          AMD64_TAG="temp-linux_amd64-${{ github.run_id }}"
          ARM64_TAG="temp-linux_arm64-${{ github.run_id }}"
          
          curl -s -X DELETE -H "Authorization: JWT $JWT" "https://hub.docker.com/v2/repositories/$REPO/tags/$AMD64_TAG/" || true
          curl -s -X DELETE -H "Authorization: JWT $JWT" "https://hub.docker.com/v2/repositories/$REPO/tags/$ARM64_TAG/" || true
